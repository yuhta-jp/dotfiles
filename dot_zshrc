source ~/.profile
### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node
### End of Zinit's installer chunk
export EDITOR="/usr/bin/nvim"
# basic settings
setopt correct
autoload -Uz select-word-style
select-word-style default
setopt nolistbeep # stop beep sound
setopt no_beep
setopt noautoremoveslash # stop auto delete slash
autoload zed # enable zed
setopt no_flow_control # enable flow control
setopt extended_glob # enable wild card
alias sudo='sudo ' # enable alias when sudo command

# completation
setopt auto_list
autoload -Uz compinit
compinit
setopt complete_aliases
zstyle ':completion:*' list-colors ''
#zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
#zstyle ':completion:*' list-colors "${LS_COLORS}"
zstyle ':completion:*:default' menu select=2
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
LISTMAX=1000 # limit completion list
#autoload predict-on
#predict-on
#enable completation after sudo
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
	                 /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin
# ignore upper case and lower case
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}' '+m:{[:upper:]}={[:lower:]}'
# grouping completions
zstyle ':completion:*' format '%B%F{blue}%d%f%b'
zstyle ':completion:*' group-name ''

# history
HISTFILE=~/.zsh_history
HISTTIMEFORMAT='%F %T '
HISTSIZE=10000
SAVEHIST=10000
setopt hist_ignore_dups     # ignore duplication command history list
setopt share_history        # share command history data
setopt hist_ignore_all_dups # ignore same commands
setopt hist_save_nodups # delete older same command
setopt hist_ignore_space # ignore command starting with space
setopt hist_reduce_blanks # delete blanks in command
setopt extended_history # record exected time
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey '^R' history-incremental-pattern-search-backward # enable wild card in searching ^R

# style
autoload -Uz colors
colors

# cd command
setopt auto_cd
setopt auto_pushd
setopt pushd_ignore_dups # ignore same directories

# kye binds
bindkey -e
setopt ignore_eof # ignore ctrl+D(stop zsh)

# plugins
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light denysdovhan/spaceship-prompt

# alias
alias ce='chezmoi edit'
alias ca='chezmoi apply'
alias cen='chezmoi edit ~/.config/nvim/init.vim'

export FZF_DEFAULT_OPTS='--height=40 --preview "bat --color=always --style=header,grid --line-range :100 {}"'
# function
fce(){
    chezmoi edit -a ~/$(chezmoi managed --include=files | fzf)
}

memo(){
    local memo
    local title
    if [[ -n $1 ]]
    then
        title=$1
    else
        title=$(date "+%Y-%m-%d-%H%M")
    fi
    memo="/home/yuhta/Dropbox/textfiles/memo/${title}.md"
    nvim  $memo
}

sme(){
    local memo
    memo=$(fd . -t file -e md ~/Dropbox/textfiles | fzf)
    if [[ -n $memo ]]
    then
        nvim -- $memo
    fi
}

shis(){
    history -fd 500 | fzf
}

update(){
    sudo apt update
    echo "--------------------------------------"
    echo "--------------------------------------"
    brew update
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
